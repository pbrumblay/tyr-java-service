# cloudbuild.yaml
steps:
  # Restore cached Gradle dependencies
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gsutil
    args:
      - -m
      - cp
      - -r
      - 'gs://${PROJECT_ID}-gradle-cache/${_SERVICE_NAME}.gradle/*'
      - '/root/.gradle/'
    id: 'restore-gradle-cache'

  - name: 'gradle:8-jdk17'
    entrypoint: gradle
    args:
      - '--no-daemon'
      - '--build-cache'
      - '--parallel'
      - '--console=plain'
      - '--info'
      - 'build'      
    id: 'build-and-test-app'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gsutil
    args:
      - -m
      - rsync
      - -r
      - -d
      - '/root/.gradle/'
      - 'gs://${PROJECT_ID}-gradle-cache/${_SERVICE_NAME}.gradle/'
    id: 'save-gradle-cache'    

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$SHORT_SHA',
      '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest',
      '--build-arg', 'JAR_FILE=build/libs/*.jar',
      '--cache-from', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest',
      '.'
    ]
    id: 'build-container-image'
    waitFor:
    - build-and-test-app

  # Create Cloud Deploy release
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'deploy'
      - 'releases'
      - 'create'
      - 'release-${SHORT_SHA}'
      - '--delivery-pipeline=${_SERVICE_NAME}-pipeline'
      - '--region=${_REGION}'
      - '--annotations=commit_sha=${REVISION_ID},build_id=$BUILD_ID'
      - '--labels=env=dev'
      - '--source=.'  # Directory containing skaffold.yaml
      - '--images=myapp=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}'
    id: 'create-deploy-release'
    waitFor:
    - build-container-image

# Build timeout
timeout: '600s'  

# Specify the images to push
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest'

substitutions:
  _REGION: 'us-central1'  
  _SERVICE_NAME: 'tyr-java-service'
  _REPOSITORY: 'applications'

# Configure artifact caching for Gradle
options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true